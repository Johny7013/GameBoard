@model GameBoard.Models.GameEvent.GameEventViewModel
@{
    ViewData["Title"] = Model.Name;
}

@section FriendsSidebar
{
    @await Component.InvokeAsync("FriendsSidebar", new
    {
        toggled = true,
        subComponentName = "GameEventInviteForm",
        subComponentArgumentsProvider = (Func<string, object>)(userName => new {gameEventId = Model.Id, userName})
    })
}

<article class="game-event">
    <h1 class="name" title="@Model.Name">@Model.Name</h1>
    @if (Model.IsInvitePending)
    {
        <section class="pending-invite border-full p-3">
            <p>You have an invitation pending for this event.</p>
            <form class="form-inline" method="post">
                <input type="hidden" asp-for="@Model.Id" name="gameEventId"/>
                <button class="btn btn-dark mr-3" type="submit" asp-action="AcceptGameEventInvite" asp-controller="GameEventInvite">Accept</button>
                <button class="btn btn-danger" type="submit" asp-action="RejectGameEventInvite" asp-controller="GameEventInvite">Reject</button>
            </form>
        </section>
    }
    @{
        var dateString = Model.Date.ToString() ?? "TBD";
    }
    <section class="date">
        <h3 title="@dateString">@dateString</h3>
        <h3 title="@Model.Place">@Model.Place</h3>
    </section>
    <section class="games">
        <h3>@Html.DisplayNameFor(m => m.Games)</h3>
        <ul class="games-list list-unstyled border-full p-1" data-simplebar>
            @foreach (var game in Model.Games)
            {
                <li title="@game">@game</li>
            }
        </ul>
    </section>
    <section class="creator">
        <h3>@Html.DisplayNameFor(m => m.Creator)</h3>
        @await Component.InvokeAsync("UserCard", new {user = Model.Creator})
    </section>
    <section class="participants">
        <h3>@Html.DisplayNameFor(m => m.Participants)</h3>
        <ul class="participants-list list-unstyled border-full p-1" data-simplebar>
            @if (!Model.Participants.Any())
            {
                <li>None</li>
            }
            @foreach (var participant in Model.Participants)
            {
                <li>@await Component.InvokeAsync("UserCard", new {user = participant})</li>
            }
        </ul>
    </section>
    <section class="invitees">
        <h3>@Html.DisplayNameFor(m => m.Invitees)</h3>
        <ul class="invitees-list list-unstyled border-full p-1" data-simplebar>
            @if (!Model.Invitees.Any())
            {
                <li>None</li>
            }
            @foreach (var invitee in Model.Invitees)
            {
                <li>@await Component.InvokeAsync("UserCard", new {user = invitee})</li>
            }
        </ul>
    </section>
    @if (Model.IsCreator)
    {
        <section class="creator-control-panel">
            <form asp-controller="GameEvent" asp-action="EditGameEvent" method="get">
                <input type="hidden" asp-for="Id"/>
                <button class="btn btn-dark" type="submit">Edit</button>
            </form>
        </section>
    }
</article>